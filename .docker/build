#!/usr/bin/env bash
set -eo pipefail;

EXECUTABLE="./.docker/build"

function echo-usage() {
  echo "  Usage $EXECUTABLE [-t tagname]*"
  echo "    Examples:"
  echo "      Set up                   -->  $EXECUTABLE cabal update"
  echo "      Build an image           -->  $EXECUTABLE"
  echo "      Build with specific tag  -->  $EXECUTABLE -t inputoutput/cardano-db-sync:local"
  echo "      Clean up caches          -->  $EXECUTABLE clean"
}


if [ ! -f ./cabal.project ] 
then
  echo "    Missing cabal.project file current directory";
  echo;echo-usage
  exit 1
fi

## print help
if  grep -qE '^--h'  <<< "$*"  ||   grep -qE "^-h" -  <<< "$*"
then
  echo-usage
  exit 1;
fi

## clean command for freeing up the caches used for build
if ( grep -qE 'clean' <<< "$*")
then
  for dir in "$HOME/.cabal-docker" "./dist-newstyle-docker"  "./chroot-env"
  do 
    echo "  Removing  $(readlink -f $dir)";
    rm -rf $dir;
  done;
  exit;
fi

function showCommand() {
  echo "+ $*"
  "$@"
}

WORKDIR=$(readlink -f .)
mkdir -p $WORKDIR/dist-newstyle-docker
mkdir -p $HOME/.cabal-docker

## Build the build image. It contains cabal, ghc and libsodium
showCommand docker build -t dbsync-buildimage -f ./.docker/build.Dockerfile  "$(dirname $0)"

## execute a command inside the build image
function execute-isolated() {
  echo "+ execute-isolated $*"
  docker run  -it  -u"$(id -u):$(id -g)" \
	-v $WORKDIR:$WORKDIR \
	-v $WORKDIR/dist-newstyle-docker:$WORKDIR/dist-newstyle \
	-e HOME=$HOME \
	-v $HOME/.cabal-docker:$HOME/.cabal\
	--entrypoint /bin/bash \
	--workdir $WORKDIR \
	dbsync-buildimage -c  "$*"
}

if [[ "$1" == cabal* ]] ; then
    execute-isolated "$@" # execute the cabal command
else
    ## default build
    execute-isolated 'cabal build all && bash -e ./.docker/copy-libraries.sh'

    ## build  final docker image. by determining the git revision or passing the arguments to docker command.
    if [ $# -gt 0 ]
    then
      showCommand docker build -f ./.docker/Dockerfile  "$@" .
    elif git describe --tags | grep  -qE '^[0-9]+(\.[0-9]+)*$'
    then
      showCommand docker build -f ./.docker/Dockerfile  -t "inputoutput/cardano-db-sync:$(git describe --tags)" .
    else
      showCommand docker build -f ./.docker/Dockerfile -t "inputoutput/cardano-db-sync:$(git rev-parse HEAD)" .
    fi
fi



